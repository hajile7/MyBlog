@page "/Getting-Interested-in-DSA"

<PageTitle>Getting Interested in DSA</PageTitle>

<div class="myHeaders">
    <h3>Getting Interested in DSA</h3>
    <p>Oct. 14, 2024</p>
</div>

<hr>

<div>
    <p>
        A couple weeks ago I made the decision to start practicing LeetCode daily. That decision was made in part to prepare for any 
        data structures and algorithms (DSA) problems I may encounter during job interviews. More importantly, though, I wanted to improve 
        and refamiliarize myself with C#, a language that I am quite partial to. I even opted to write this blog in Blazor Web Assembly
        (which is deserving of its own post) to really get used to operating within the language again. 
    </p>
    <p>
        This blog and my decision to start spending time on LeetCode problems came after a month+ long typing trainer project where most of my days 
        were spent in Angular writing Typescript. If you're at all interested in checking out that project, check out this Github
        <a href="https://github.com/hajile7/TyperV1">link</a> (accompanying backend can be found 
        <a href="https://github.com/hajile7/TyperV1Backend">here</a>). I plan on porting said project over to Blazor in the near future
        and getting it hosted for everyone to enjoy. 
    </p>

    <p>
        Suffice to say, I was a bit rusty in my C# outside of bog-standard ASP.NET Core Web APIs. Additionally, not having come from a 'standard' education
        in computer science, I've always craved some not-so-superficial knowledge in the realm of DSA. While some people curse LeetCode and declare it a
        waste of time in lieu of project-based learning, I would respectfully disagree; at least, within the context of someone such as myself, who is widely
        self-taught. Now, don't misconstrue that as me advocating for grinding LeetCode day in, day out. A little here and there should suffice just fine
        for anyone sufficiently interested in learning DSA through the lens of LeetCode.
    </p>

    <p>
        I started this journey through <a href="https://neetcode.io/">NeetCode.io</a>, which offers a roadmap to learning DSA through LeetCode via a roadmap 
        currated by NeetCode's creator (an ex-Amazon, ex-Googler gone Leetcode grinder). I find that following this roadmap (150 problems) takes away
        a lot of the guesswork that comes along with purverying LeetCode on your own. If possible, I typically do a problem a day, which I know is not always
        possible for everyone. That said, just doing one problem a day has already increased my confidence in solving these types of problems and in using 
        some data structures I was previously less familiar with. 
    </p>
    <p>
        Soon into this LeetCode journey, I ran across a problem that really changed my outlook on LeetCode questions and my general problem solving strategies 
        (and hash maps!). That problem was <a href="https://leetcode.com/problems/group-anagrams/description/">Group Anagrams</a>. The problem statement is 
        straight-forward enough: given an array of strings, group all anagrams together. The result can be returned in any order. So, if the input were: <br> 
        <div class="codeContainer">
            <code>
                strs = ["eat","tea","tan","ate","nat","bat"];
            </code>
        </div>
        We would want to return:
        <div class="codeContainer">
            <code>[["bat"],["nat","tan"],["ate","eat","tea"]];</code>
        </div>
    </p>
</div>
